From f18e63824df6bcbadc99f8efa26aae6c425fd5bc Mon Sep 17 00:00:00 2001
From: Jeff Lance <j-lance1@ti.com>
Date: Thu, 13 Dec 2012 07:13:11 -0600
Subject: [PATCH] Adding patch to fix QWSLOCK message issue

---
 src/gui/embedded/qwslock.cpp |   11 +++++++----
 src/gui/embedded/qwslock_p.h |    2 +-
 2 files changed, 8 insertions(+), 5 deletions(-)

diff --git a/src/gui/embedded/qwslock.cpp b/src/gui/embedded/qwslock.cpp
index f9ea000..7d8b6c2 100644
--- a/src/gui/embedded/qwslock.cpp
+++ b/src/gui/embedded/qwslock.cpp
@@ -82,10 +82,12 @@ QWSLock::QWSLock(int id) : semId(id)
 #ifndef QT_NO_QWS_SIGNALHANDLER
     QWSSignalHandler::instance()->addWSLock(this);
 #endif
+    owned = false;
 
 #ifndef QT_POSIX_IPC
     if (semId == -1) {
         semId = semget(IPC_PRIVATE, 3, IPC_CREAT | 0666);
+        owned = true;
         if (semId == -1) {
             perror("QWSLock::QWSLock");
             qFatal("Unable to create semaphore");
@@ -100,7 +102,6 @@ QWSLock::QWSLock(int id) : semId(id)
     }
 #else
     sems[0] = sems[1] = sems[2] = SEM_FAILED;
-    owned = false;
 
     if (semId == -1) {
         // ### generate really unique IDs
@@ -134,9 +135,11 @@ QWSLock::~QWSLock()
 
     if (semId != -1) {
 #ifndef QT_POSIX_IPC
-        qt_semun semval;
-        semval.val = 0;
-        semctl(semId, 0, IPC_RMID, semval);
+        if(owned) {
+            qt_semun semval;
+            semval.val = 0;
+            semctl(semId, 0, IPC_RMID, semval);
+        }
         semId = -1;
 #else
         // emulate the SEM_UNDO behavior for the BackingStore lock
diff --git a/src/gui/embedded/qwslock_p.h b/src/gui/embedded/qwslock_p.h
index 71a4cca..7a74710 100644
--- a/src/gui/embedded/qwslock_p.h
+++ b/src/gui/embedded/qwslock_p.h
@@ -86,8 +86,8 @@ private:
     int lockCount[2];
 #ifdef QT_POSIX_IPC
     sem_t *sems[3];
-    bool owned;
 #endif
+    bool owned;
 };
 
 QT_END_NAMESPACE
-- 
1.7.0.4

